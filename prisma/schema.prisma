generator client {
  provider = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  phone     String?
  rentals   Rental[]
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Car {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  brand       String
  model       String
  year        Int
  pricePerDay Float
  available   Boolean  @default(true)
  imageUrl    String?
  rentals     Rental[]
  reviews     Review[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Rental {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @map("userId") @db.ObjectId
  carId      String   @map("carId") @db.ObjectId
  startDate  DateTime
  endDate    DateTime
  totalCost  Float
  status     RentalStatus @default(PENDING)
  user       User   @relation(fields: [userId], references: [id])
  car        Car    @relation(fields: [carId], references: [id])
  payment    Payment?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum RentalStatus {
  PENDING
  CONFIRMED
  CANCELED
  COMPLETED
}

model Payment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  rentalId   String   @unique @map("rentalId") @db.ObjectId
  amount     Float
  status     PaymentStatus @default(PENDING)
  rental     Rental  @relation(fields: [rentalId], references: [id])
  createdAt  DateTime @default(now())
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @map("userId") @db.ObjectId
  carId     String   @map("carId") @db.ObjectId
  rating    Int
  comment   String?
  user      User   @relation(fields: [userId], references: [id])
  car       Car    @relation(fields: [carId], references: [id])
  createdAt DateTime @default(now())
}